[tool.poetry]
name = "trader"
version = "0.1.1"
description = "Trader for MetaTrader 5"
authors = ["Oleg Alexandrov <alexandrovoleg.ru@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://teratron.github.io/trader"
repository = "https://github.com/teratron/trader"
documentation = "https://teratron.github.io/trader/docs"
keywords = [
    "metatrader",
    "market",
    "forex",
    "currency",
    "exchange"
]
classifiers = [
    "Environment :: Console",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
packages = [
    { include = "trader", from = "src" },
    { include = "techind", from = "src" },
    { include = "trader/py.typed" },
    { include = "techind/py.typed" }
]
include = [
    { path = "tests", format = "sdist" }
]
exclude = ["src/**/*.md"]

[tool.poetry.dependencies]
python = ">= 3.10, < 3.11"
metatrader5 = "^5.0.44"

[tool.poetry.group.dev.dependencies]
requests = "*"
setuptools = "*"
pre-commit = "*"
black = "^23.1.0"
pylint = "*"
flake8 = "*"
autopep8 = "*"
bandit = "*"
isort = "*"
pandas = "*"
matplotlib = "*"

[tool.poetry.group.typing.dependencies]
mypy = "*"

[tool.poetry.group.docs.dependencies]
sphinx = "*"
pydocstyle = "*"
docformatter = { extras = ["tomli"], version = "^1.5.1" }

[tool.poetry.group.test.dependencies]
pytest = "*"
pytest-cov = "*"

[tool.poetry.scripts]
app = "trader.console.app:main"
tests = "pytest:tests"
black = "black:src/trader/*.py"

[tool.mypy]
files = "src/**/*.py"
mypy_path = "src"
packages = "src/trader"
strict = true
namespace_packages = true
explicit_package_bases = true
ignore_missing_imports = true
show_error_codes = true

[tool.black]
line-length = 88
target-version = ["py37", "py38", "py39", "py310"]
preview = true
include = '\.pyi?$'

[tool.pytest.ini_options]
addopts = "-n auto"
testpaths = ["tests"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# Installation poetry:
# --------------------
# python -m venv .venv
# .venv/bin/pip install -U pip setuptools
# .venv/bin/pip install poetry

# Change environments:
# --------------------
# poetry env use path/to/python
